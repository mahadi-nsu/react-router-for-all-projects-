{"version":3,"sources":["webpack://react-router-ultimate-burgers/./src/Products/Product.js","webpack://react-router-ultimate-burgers/./src/Products/ProductsService.js"],"names":["ProductStyles","css","id","useParams","navigate","useNavigate","useState","product","setProduct","useEffect","retrieveProduct","console","warn","replace","state","className","src","alt","name","price","description","type","onClick","listProducts","fetch","response","ok","json","Error","createProduct","payload","method","headers","body","JSON","stringify","updateProduct","deleteProduct"],"mappings":"iQAMMA,GAAgBC,QAAH,qtBAuFnB,QAhDgB,WACd,IAAQC,GAAOC,UAAPD,GACFE,GAAWC,UACjB,GAA8BC,cAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,gBAAU,YACR,iBAAC,8GAEyBC,QAAgBR,GAFzC,OAESK,EAFT,OAGGC,EAAWD,GAHd,gDAKGI,QAAQC,KAAR,MACAR,EAAS,IAAK,CAAES,SAAS,EAAMC,MAAO,CAAEZ,QAN3C,wDAAD,KASC,CAACA,IAEY,OAAZK,EACK,yCAIP,uBAAKQ,UAAWf,GACd,uBAAKe,UAAU,iBACb,uBACEC,IAAG,+BAA0BT,EAAQL,GAAlC,QACHe,IAAKV,EAAQW,KACbH,UAAU,iBAEZ,2BACE,sBAAIA,UAAU,gBAAgBR,EAAQW,MACtC,qBAAGH,UAAU,iBAAb,WAAkCR,EAAQY,MAAQ,QAGtD,uBAAKJ,UAAU,uBACb,yBAAIR,EAAQa,aACZ,0BACEC,KAAK,SACLN,UAAU,iBACVO,QAAS,kBAAMlB,GAAU,KAH3B,Y,gHCjFKmB,EAAY,mCAAG,oGACHC,MAAM,iBADH,YACpBC,EADoB,QAEbC,GAFa,gCAGXD,EAASE,OAHE,qDAKpB,IAAIC,MAAM,wBALU,2CAAH,qDAQZC,EAAa,mCAAG,WAAOC,GAAP,uFACJN,MAAM,gBAAiB,CAC5CO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KANI,YACrBL,EADqB,QASdC,GATc,gCAUZD,EAASE,OAVG,qDAYrB,IAAIC,MAAM,wBAZW,2CAAH,sDAeblB,EAAe,mCAAG,WAAOR,GAAP,uFACNsB,MAAM,iBAAD,OAAkBtB,IADjB,YACvBuB,EADuB,QAEhBC,GAFgB,gCAGdD,EAASE,OAHK,qDAKvB,IAAIC,MAAM,wBALa,2CAAH,sDAQfQ,EAAa,mCAAG,WAAON,GAAP,uFACJN,MAAM,iBAAD,OAAkBM,EAAQ5B,IAAM,CAC1D6B,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KANI,YACrBL,EADqB,QASdC,GATc,gCAUZD,EAASE,OAVG,qDAYrB,IAAIC,MAAM,wBAZW,2CAAH,sDAebS,EAAa,mCAAG,WAAOnC,GAAP,4EACrBuB,EAAWD,MAAM,iBAAD,OAAkBtB,GAAM,CAC5C6B,OAAQ,YAGGL,GALc,gCAMZD,EAASE,OANG,qDAQrB,IAAIC,MAAM,wBARW,2CAAH","file":"829.016e3788f0bf0a9a848d.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { css } from \"@emotion/css\";\r\n\r\nimport { retrieveProduct } from \"./ProductsService\";\r\n\r\nconst ProductStyles = css`\r\n  color: #fff;\r\n  background: #2a2c37;\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  .Product {\r\n    &-Title {\r\n      display: flex;\r\n    }\r\n    &-Name {\r\n      font-weight: 600;\r\n      font-size: 1.2rem;\r\n      margin: 0;\r\n    }\r\n    &-Price {\r\n      color: #50fa7b;\r\n      font-weight: 600;\r\n      font-size: 1rem;\r\n      margin: 0;\r\n    }\r\n    &-Icon {\r\n      width: 50px;\r\n      margin-right: 15px;\r\n    }\r\n    &-Button {\r\n      border: 2px solid #50fa7b;\r\n      color: #50fa7b;\r\n      background: none;\r\n      padding: 10px 15px;\r\n      margin-right: 5px;\r\n      border-radius: 6px;\r\n      outline: 0;\r\n      cursor: pointer;\r\n      font-weight: 600;\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Product = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [product, setProduct] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const product = await retrieveProduct(id);\r\n        setProduct(product);\r\n      } catch (e) {\r\n        console.warn(e);\r\n        navigate(\"/\", { replace: true, state: { id } });\r\n      }\r\n    })();\r\n  }, [id]);\r\n\r\n  if (product === null) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={ProductStyles}>\r\n      <div className=\"Product-Title\">\r\n        <img\r\n          src={`/assets/img/products/${product.id}.svg`}\r\n          alt={product.name}\r\n          className=\"Product-Icon\"\r\n        />\r\n        <div>\r\n          <h1 className=\"Product-Name\">{product.name}</h1>\r\n          <p className=\"Product-Price\">{`$${product.price / 100}`}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"Product-Description\">\r\n        <p>{product.description}</p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"Product-Button\"\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const listProducts = async () => {\r\n  const response = await fetch(`/api/products`);\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const createProduct = async (payload) => {\r\n  const response = await fetch(`/api/products`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const retrieveProduct = async (id) => {\r\n  const response = await fetch(`/api/products/${id}`);\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const updateProduct = async (payload) => {\r\n  const response = await fetch(`/api/products/${payload.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  const response = fetch(`/api/products/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n"],"sourceRoot":""}