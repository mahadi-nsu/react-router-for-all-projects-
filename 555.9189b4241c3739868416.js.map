{"version":3,"sources":["webpack://react-router-ultimate-burgers/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://react-router-ultimate-burgers/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://react-router-ultimate-burgers/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://react-router-ultimate-burgers/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://react-router-ultimate-burgers/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://react-router-ultimate-burgers/./src/Products/ProductCard.js","webpack://react-router-ultimate-burgers/./src/Products/ProductsIndex.js","webpack://react-router-ultimate-burgers/./src/Products/ProductsService.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","ProductCardStyles","css","product","to","id","className","src","alt","name","price","ProductsIndexStyles","state","useLocation","useState","products","setProducts","useSearchParams","searchParams","setSearchParams","useEffect","console","warn","listProducts","data","params","fromEntries","sortProductsFromParams","keys","length","sorted","sort","x","y","order","updateParams","e","target","newParams","type","onChange","defaultChecked","get","map","item","fetch","response","ok","json","Error","createProduct","payload","method","headers","body","JSON","stringify","retrieveProduct","updateProduct","deleteProduct"],"mappings":"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","file":"555.9189b4241c3739868416.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport { css } from \"@emotion/css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductCardStyles = css`\r\n  display: flex;\r\n  color: #fff;\r\n  background: #2a2c37;\r\n  border-radius: 6px;\r\n  text-decoration: none;\r\n  padding: 15px;\r\n  margin-bottom: 5px;\r\n  transition: transform 0.1s ease-in-out, background 0.1s ease-in-out,\r\n    box-shadow 0.1s ease-in-out;\r\n  &:hover {\r\n    transform: translate(0, -3px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.035);\r\n  }\r\n  .ProductCard {\r\n    &-Icon {\r\n      width: 40px;\r\n      margin-right: 15px;\r\n    }\r\n    &-Name {\r\n      font-size: 1.2rem;\r\n      margin: 0;\r\n    }\r\n    &-Price {\r\n      color: #50fa7b;\r\n      font-size: 1rem;\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductCard = ({ product }) => (\r\n  <Link to={product.id} className={ProductCardStyles}>\r\n    <img\r\n      src={`/assets/img/products/${product.id}.svg`}\r\n      alt={product.name}\r\n      className=\"ProductCard-Icon\"\r\n    />\r\n    <div>\r\n      <h2 className=\"ProductCard-Name\">{product.name}</h2>\r\n      <p className=\"ProductCard-Price\">{`$${product.price / 100}`}</p>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nexport default ProductCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\nimport { css } from \"@emotion/css\";\r\n\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nimport { listProducts } from \"./ProductsService\";\r\n\r\nconst ProductsIndexStyles = css`\r\n  .ProductsIndex {\r\n    &-List {\r\n      margin-top: 10px;\r\n    }\r\n    &-Radios {\r\n      display: flex;\r\n      align-items: center;\r\n      span {\r\n        width: 35px;\r\n        color: #fff;\r\n        font-size: 0.8rem;\r\n        margin-right: 10px;\r\n      }\r\n      label {\r\n        display: flex;\r\n        align-items: center;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductsIndex = () => {\r\n  const { state } = useLocation();\r\n  const [products, setProducts] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    if (state) {\r\n      console.warn(`Nothing found for ${state.id}`);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await listProducts();\r\n      const params = Object.fromEntries([...searchParams]);\r\n      sortProductsFromParams(data, params);\r\n    })();\r\n  }, []);\r\n\r\n  const sortProductsFromParams = (data, params) => {\r\n    if (!Object.keys(params).length) {\r\n      setProducts(data);\r\n      return;\r\n    }\r\n\r\n    const sorted = [...data].sort((x, y) => {\r\n      const { sort, order } = params;\r\n      switch (order) {\r\n        case \"ascending\": {\r\n          return x[sort] > y[sort] ? 1 : -1;\r\n        }\r\n        case \"descending\": {\r\n          return x[sort] < y[sort] ? 1 : -1;\r\n        }\r\n        default: {\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n    setProducts(sorted);\r\n  };\r\n\r\n  const updateParams = (e) => {\r\n    const { name, value } = e.target;\r\n    const currentParams = Object.fromEntries([...searchParams]);\r\n    const newParams = { ...currentParams, [name]: value };\r\n    setSearchParams(newParams);\r\n    sortProductsFromParams(products, newParams);\r\n  };\r\n\r\n  if (products === null) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className={ProductsIndexStyles}>\r\n      <div className=\"ProductsIndex-Radios\">\r\n        <span>Sort:</span>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"radio\"\r\n            name=\"sort\"\r\n            value=\"name\"\r\n            onChange={updateParams}\r\n            defaultChecked={searchParams.get(\"sort\") === \"name\"}\r\n          />\r\n        </label>\r\n        <label>\r\n          Price\r\n          <input\r\n            type=\"radio\"\r\n            name=\"sort\"\r\n            value=\"price\"\r\n            onChange={updateParams}\r\n            defaultChecked={searchParams.get(\"sort\") === \"price\"}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"ProductsIndex-Radios\">\r\n        <span>Order:</span>\r\n        <label>\r\n          Ascending\r\n          <input\r\n            type=\"radio\"\r\n            name=\"order\"\r\n            value=\"ascending\"\r\n            onChange={updateParams}\r\n            defaultChecked={searchParams.get(\"order\") === \"ascending\"}\r\n          />\r\n        </label>\r\n        <label>\r\n          Descending\r\n          <input\r\n            type=\"radio\"\r\n            name=\"order\"\r\n            value=\"descending\"\r\n            onChange={updateParams}\r\n            defaultChecked={searchParams.get(\"order\") === \"descending\"}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"ProductsIndex-List\">\r\n        {products.map((item) => (\r\n          <ProductCard product={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsIndex;\r\n","export const listProducts = async () => {\r\n  const response = await fetch(`/api/products`);\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const createProduct = async (payload) => {\r\n  const response = await fetch(`/api/products`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const retrieveProduct = async (id) => {\r\n  const response = await fetch(`/api/products/${id}`);\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const updateProduct = async (payload) => {\r\n  const response = await fetch(`/api/products/${payload.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  const response = fetch(`/api/products/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n\r\n  if (response.ok) {\r\n    return await response.json();\r\n  }\r\n  throw new Error(\"Something went wrong\");\r\n};\r\n"],"sourceRoot":""}